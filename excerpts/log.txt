日志：
1214：通过sdk自带的应用和驱动程序学习修改移植。将sdk全部解压建仓，先看脚本文件，在看具体的代码。

1、查看文件D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\01.software\board\document_cn\Hi3516A／Hi3516D SDK 安装以及升级使用说明.txt
2、查看文件D:\5-video\work_code\video_myworks\osdrv\readme_cn.txt
3、【问题】编译osdrv的时候没有连接libc.so导致make yaffs工具的时候失败
    【解答】缺乏libc.a，zypper install glibc-static 安装库即可
    【原因】在很多第三方程序为了确保在没有相应动态库时运行正常，喜欢在编译最后应用程序时加入-static.在老版本中编译正常，但在新版Fedora下编译常常报错
4、参考 （查看硬件手册和软件手册）
    *硬件：D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\00.hardware\chip\document_cn\
        芯片手册  《Hi3516A／Hi3516D 专业型HD IP Camera Soc用户指南.pdf》
        用户手册  《Hi3516A 专业型HD IP Camera SoC产品简介.pdf》
        
    *软件：D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\01.software\board\document_cn
		《Hi3516A／Hi3516D SDK 安装以及升级使用说明.txt》
        《HiMPP IPC V2.0 媒体处理软件开发参考.pdf》
        《Hi3516A／Hi3516D Linux开发环境用户指南.pdf》
        《Hi3516A／Hi3516D SDK 安装以及升级使用说明.txt》  。。。。
        D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\01.software\pc\DEC_LIB\documents_cn
        《H.264 PC解码库软件 API参考.pdf》
        《H.264 PC解码库软件开发指南.pdf》
        《客户端AMR编解码库API参考.pdf》
        《客户端音频编解码库API参考.pdf》 。。。。
        D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\01.software\pc\IVE_CLIB
        《HiIVE Brief Specification.pdf》
        D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\01.software\pc\PQ_TOOL\documents_cn
        《图像质量调试工具使用指南.pdf》
    *源码：D:\5-video\hi3516_sdk\Hi3516A V100R001C01SPC040\01.software\board\Hi3516A_SDK_V1.0.4.0\package
        参考学习驱动和应用的例子，开发自己的应用和驱动。
    
    4.1->硬件特性：接口时序、管脚复用控制寄存器、软件复用管脚、硬件管脚复用、管脚驱动能力、管脚分布、
            ->系统管理：复位、时钟、处理器子系统（arm-Cortex-a7处理器600MHZ）、中断系统（96个中断源-64个外部中断）、系统控制器（三种工作模式）、DMA控制器（DMAC流控）、CIPHER（加解密）、定时器（4个timer）、看门狗（32bits减法计数器）、实时时钟（时钟显示和定时报警）、电源管理与低功耗模式控制（低功耗模式）
       
            ->存储器接口：DDR控制器、SPI NOR FLASH 存储控制器、NAND FLASH控制器、SPI NAND FLASH控制器
       
            ->GSF(千兆以太网交换接口实现网络接口的数据的接收和发送，支持10/100/1000Mbit/s模式可配置，EEE能效以太网、WoL网络唤醒功能)
       
            ->视频编码（视频编解码器是一个支持H.264/H.265/JPEG 的多协议编解码器，包括AVC、VEDU和JPGE 三部分，其中AVC 实现H.264 协议的编码，VEDU 实现H.265 协议的编解码，JPEG 实现JPEG 协议的编码）
            
            ->视频及图形处理（TDE-Two Dimensional engine，VPSS-Video process sub-system，VGS-video graph system）
       
            ->运动检测单元（MDU）
       
            ->智能加速引擎（IVE）
       
            ->视频接口（VICAP-视频捕获单元，VDP-video Display processor，MIPI Rx-移动行业处理器接口）
       
            ->ISP（图像处理）
       
            ->音频接口（i2s PCM,DMA方式存取数据）
       
            ->外围设备（I2C SPI UART MMC/SD/SDIO 红外接口 GPIO USB2.0 LSADC_CTRL PWM）
     
    4.2->sdk软件特性：系统控制、视频输入、视频输出、视频处理子系统、视频编码、视频监测分析、区域管理、音频、视频图形子系统、/proc调试信息
	(海思媒体处理平台的主要内部处理流程 ，主要分为视频输入（VI）、视频处理（VPSS）、视频编码（VENC）、视频解码（VDEC）、视频输出(VO)、视频侦测分析(VDA)、音频输入(AI)、音频输出(AO)、音频编码（AENC）、音频解码（ADEC）、区域管理（REGION）等模块)
	
1215：linux驱动设备模型+mpp设备驱动    华为开发者云（类似isource）
	1、音频驱动ak7756 
	2、应用程序摄像头 isp   -- sony_imx178
	3、在用户态下编程可以通过main()的参数来传递命令行参数，而编写一个内核模块则通过module_param()来传递参数
	
1218：mpp驱动
	1、himedia驱动
	2、linux编程：系统编程
		处理器总处于以下状态中的一种：
		1、内核态，运行于进程上下文，内核代表进程运行于内核空间；
		2、内核态，运行于中断上下文，内核代表硬件运行于内核空间；
		3、用户态，运行于用户空间。
	3、所谓的进程上下文，就是一个进程在执行的时候，CPU的所有寄存器中的值、进程的状态以及堆栈中的内容，当内核需要切换到另一个进程时，它需要保存当 前进程的所有状态，即保存当前进程的进程上下文，以便再次执行该进程时，能够恢复切换时的状态，继续执行（https://www.cnblogs.com/reality-soul/p/6377137.html）
		运行在进程上下文的内核代码是可以被抢占的（Linux2.6支持抢占）。但是一个中断上下文，通常都会始终占有CPU（当然中断可以嵌套，但我们一般不这样做），不可以被打断。正因为如此，运行在中断上下文的代码就要受一些限制，不能做下面的事情：

		3.1、睡眠或者放弃CPU。

		这样做的后果是灾难性的，因为内核在进入中断之前会关闭进程调度，一旦睡眠或者放弃CPU，这时内核无法调度别的进程来执行，系统就会死掉

		3.2、尝试获得信号量
	
		如果获得不到信号量，代码就会睡眠，会产生和上面相同的情况

		3.3、执行耗时的任务
	
		中断处理应该尽可能快，因为内核要响应大量服务和请求，中断上下文占用CPU时间太长会严重影响系统功能。

		3.4、访问用户空间的虚拟地址

		因为中断上下文是和特定进程无关的，它是内核代表硬件运行在内核空间，所以在终端上下文无法访问用户空间的虚拟地址
	4、linux输入子系统（http://www.cnblogs.com/reality-soul/p/4705712.html）