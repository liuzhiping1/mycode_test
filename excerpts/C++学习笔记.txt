C++ 的学习笔记
C++ primer	Plus 第六版 史蒂芬.普拉达

C++在C语言的基础上新增很多特性，包括：
类和对象，继承，多态，虚函数，RTTI（运行阶段类型识别）、函数重载，引用变量，泛型编程，异常机制，名称空间
第一章：
	预备知识：面向过程和面向对象之间的区别，创建C++程序的技巧，C++编译器的使用方法。
第二章：
	开始学习C++，
第三章：
	处理数据。C++提供内置类型来存储两种数据：整形和浮点数。如何处理不同类型之间的显式和隐式转换的
第四章：
	复合类型，最高级的类型是类，在9~13章讨论，本章讨论数组、指针、结构。创建和存储文本字符串及如何使用C-风格字符数组和C++ string类来处理文本输入和输出，内存分配，new和delete运算符
第五章：
	循环和关系表达式。for、while、do while
第六章：
	分支语句和逻辑运算符，if、if else、switch。确定字符关系（如测试字符是数字还是非打印字符）的函数库cctype，文件的输入/输出
第七章：
	函数 C函数和C++函数的共同特性，递归（调用自身），以及如何用它实现分而治之的策略。函数指针，它使得程序员可以通过函数的参数来使用另一个函数
第八章：
	函数探幽：C++新增的特性。1内联函数。2引用变量，提供了另一种将信息传递给函数的方式。3默认参数使得函数能够自动为函数调用中省略的函数参数提供值。4函数重载使得程序员能够创建多个参数列表不同的同名函数。类设计中经常使用这些特性。5另外函数模板使得程序员能够指定相
	关函数族的设计。
第九章：
	内存模型和名称空间：1如何创建多文件程序，2分配内存的各种方式、管理内存的各种方式以及作用域、链接、名称空间，这些内容决定了变量在程序的哪些部分可见。
第十章：
	对象和类：类是用户定义的类型，对象是类的实例。1面向对象编程和类设计，2对象申明描述的是存储在对象中的信息以及可对对象执行的操作（类方法），3对象的某些部分对于外界来说是可见的（共有部分），而某些部分却是隐藏的（私有部分）。4特殊的类方法（构造函数和析构函数）在对象创建和释放的时候发挥作用，5如何使用类来实现ADT，如栈
第十一章：
	使用类：深入了解类，1运算符重载，使得程序员能够定义与类对象一起使用的运算符，如+。2还将学习友元函数，这些函数可以访问外部世界不可访问的类数据，3一些构造函数和重载运算符成员函数是如何被用来管理类类型转换的。
第十二章：
	类和动态内存分配：让类成员指向动态分配的内存很有用。1如果程序员在类构造函数中使用new来分配动态内存，就有责任提供适当的析构函数，定义显式拷贝构造函数和显式赋值运算符。2在程序员没有提供显式定义时，将如何隐式的生成成员函数以及这些成员函数的行为。3通过使用对象指针了解队列模拟问题，扩充类方面的知识
第十三章：
	类继承：1面向对象编程中，继承是功能最强大的特性之一，通过继承，派生类可以继承基类的特性，可重用基类代码。2公有继承，这种继承模拟了is-a关系，即派生对象是基对象的特例。有些继承关系是多态的，这意味着相同的方法名称可能导致依赖于对象类型的行为。要实现这种行为，需要使用一种新的成员函数————虚函数。3有时，使用抽象基类是实现继承关系的最佳方式。
第十四章：
	C++的代码重用：公有继承只是代码重用的方式之一，本章介绍其他几种方式，1如果一个类包含了另一个类的对象，则称为包含，包含可以用来模拟has-a关系，其中一个类包含另一个类的对象。也可以用私有继承和保护继承来模拟这种关系。2各种方法之间的区别。3类模板，它让程序员能够使用泛型定义类，然后使用模板根据具体类型创建特定的类，例如栈模板使程序员可以创建整数栈或字符串栈。3多重公有继承，使用这种方式，一个类可以从多个类派生而来。
第十五章：
	友元、异常和其他：本章扩展了对友元的讨论，讨论了友元类和友元成员函数。然后从异常开始介绍了C++的几项新特性。RTTI，这种机制用来确定对象类型，最后介绍一种更安全的方法来替代不受限制的强制类型转换
第十六章：
	string类和标准模板库：C++语言新增的一些类库。对于C风格字符串来说，string类是一种方便且功能强大的替代方式。quto_ptr类帮助管理动态分配的内存。STL提供了几种类容器（包括数组、队列、链表、集合和映射）的模板表示，它还提供了高效的泛型算法库，这些算法可用于STL容器，也可以用于常规数组。模板类valarray为数值数组提供了支持。
第十七章：
	输入、输出和文件：本章复习C++I/O，并讨论如何格式化输出。如何使用类方法来确定输入或输出流的状态，了解输入类型是否匹配或是否检测到了文件尾。C++使用继承来派生用于管理文件输入和输出的类。如何打开文件，以进行输入和输出，如何在文件中追加数据，如何使用二进制文件，如何获得对文件的随机访问权。最后还将学习如何使用标准的I/O方法来读取和写入字符串
第十八章：
	探讨C++新标准：本章首先复习之前介绍过的几项C++11新功能，包括新类型、统一的初始化语法、自动类型推断、新的智能指针以及作用域内枚举。然后讨论新增的右值引用类型以及如何使用它来实现移动语义。接下来介绍了新增的类功能、lambda表达式和可变参数模板。
附录A：计数系统：本章讨论八进制、十六进制和二进制数
附录B：C++保留字
附录C：ASCII字符集
附录D：运算符优先级
附录E：其他运算符
附录F:模板类string
附录G：标准模板库方法和函数：总结了STL容器方法和通的STL算法函数
附录H：精选读物和网上资源
附录I：转换ISO标准C++
附录J：复习题答案


第一章：预备知识
		三种编程方式：C语言代表的过程性语言、C++在C语言基础上添加的类代表的面向对象语言、C++模板支持的泛型编程。 计算机语言要处理的两个概念：计算数据和算法。与强调算法的过程性编程不同，面向对象强调的是数据。OOP程序设计首先设计类，他们准确的表示了程序要处理的东西，它的重点不是放在任务上，而是放在表示概念上。
第二章： 开始学习C++
		名称空间：using是编译指令，用来区分不同版本或空间的相同名称，std::cout其种std为名称空间。using namespace std，这样声明后就可以省略前缀std::，当然这是偷懒的做法，其实更好的方法直接用using std::cout。
		"<<" 插入运算符，这个指出了信息流动的路径 std::cout << "hello world!"，这个像C语言中的左移运算符，这是一个运算符重载的例子，C语言也有重载的运算符，如“&”取指针和按位与， "*"乘号和指针解除引用
		控制符endl：endl是C++符号，表示一个重要的概念：重起一行，也可以用‘\n’换行符，这可以减少输入量
		类：用户定义的一种数据类型。
		C++提供两种发送消息的方式：类方法（函数调用）和重新定义运算符
		